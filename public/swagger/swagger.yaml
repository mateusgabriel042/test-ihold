openapi: 3.0.3
info:
  title: Teste IHold
  description: |-
    Apis used in ihold test
servers:
  - url: /api
paths:
  /auth/login:
    post:
      security:
        - bearerAuth: []
      tags:
        - Auth
      summary: Login
      description: Make Login
      operationId: makeLogin
      requestBody:
        description: Auth payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLogin'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCreatedSuccess'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
  /products:
    get:
      tags:
        - Products
      security:
        - bearerAuth: []
      summary: Get Products
      description: Get Products
      operationId: indexProducts

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexProductResponseSucess'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
    post:
      security:
        - bearerAuth: []
      tags:
        - Products
      summary: Insert a new Product
      description: Insert a new Product
      operationId: addProduct
      requestBody:
        description: Product payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreProduct'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCreatedSuccess'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
  /products/{productId}:
    put:
      tags:
        - Products
      security:
        - bearerAuth: []
      summary: Update a Products
      description: Update a products
      operationId: updateProducts
      parameters:
        - in: path
          name: productId
          schema:
            type: integer
            format: int64
          required: true
          description: ID of the product to update
      requestBody:
        description: Visitor payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProduct'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOkSuccess'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
    get:
      tags:
        - Products
      security:
        - bearerAuth: []
      summary: Show a visitor
      description: Show full data of a specific visitor
      operationId: showVisitor
      parameters:
      - in: path
        name: productId
        schema:
          type: integer
          format: int64
        required: true
        description: ID of the product to edit
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOkSuccess'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
    delete:
      tags:
        - Products
      security:
        - bearerAuth: []
      summary: Delete a visitor
      description: Endpoint to remove a visitor
      operationId: deleteVisitor
      parameters:
        - in: path
          name: productId
          schema:
            type: integer
            format: int64
          required: true
          description: ID of the product to be deleted
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOkSuccess'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
  /orders:
    get:
      tags:
        - Orders
      security:
        - bearerAuth: []
      summary: Get Orders
      description: Get Orders
      operationId: indexOrders
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexOrdersResponseSucess'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
    post:
      security:
        - bearerAuth: []
      tags:
        - Orders
      summary: Insert a new Orders
      description: Insert a new Orders
      operationId: addOrders
      requestBody:
        description: Orders payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreOrder'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCreatedSuccess'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
  /orders/{orderId}:
    put:
      tags:
        - Orders
      security:
        - bearerAuth: []
      summary: Update a Products
      description: Update a Order
      operationId: updateOrders
      parameters:
        - in: path
          name: orderId
          schema:
            type: integer
            format: int64
          required: true
          description: ID of the order to update
      requestBody:
        description: Order payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrder'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOkSuccess'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
    get:
      tags:
        - Orders
      security:
        - bearerAuth: []
      summary: Show a order
      description: Show full data of a specific order
      operationId: showOrder
      parameters:
      - in: path
        name: orderId
        schema:
          type: integer
          format: int64
        required: true
        description: ID of the order to edit
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOkSuccess'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
components:
  schemas:
    ApiResponseOkSuccess:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
        data:
          type: object
    ApiResponseOkPaginatedSuccess:
      type: object
      properties:
        page:
          type: integer
          example: 1
        size:
          type: integer
          example: 15
        total:
          type: integer
          example: 20
        data:
          type: array
          items:
            type: object
    ApiResponseCreatedSuccess:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
        data:
          type: object
    ApiResponseError:
      type: object
      properties:
        code:
          type: number
          example: 500
        message:
          type: string
    IndexOrdersResponseSucess:
      type: object
      properties:
        code:
          type: integer
          example: 1
        size:
          type: integer
          example: 15
        total:
          type: integer
          example: 20
        data:
          type: array
          items:
            type: object
            properties:
              orders:
                type: object
                properties:
                  current_page:
                    type: int32
                    example: 1
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: int32
                          example: 1
                        customer_id:
                          type: int32
                          example: 1
                        order_status_id:
                          type: int32
                          example: 1
                        orderStatus:
                          type: object
                          properties:
                            id:
                              type: int32
                              example: 1
                            name:
                              type: string
                              example: Aguardando Aprovacao
                        customer:
                          type: object
                          properties:
                            id:
                              type: int32
                              example: 1
                            customer_name:
                              type: string
                              example: Cliente 1
                        orderItem:
                          type: array
                          items:
                            type: object
                            properties:
                              product_id:
                                type: int32
                                example: 1
                              order_id:
                                type: int32
                                example: 1
                              quantity:
                                type: number
                                format: double
                                example: 1
                              sales_price:
                                type: number
                                format: double
                                example: 15.00
    AuthLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: admin123@example.com
        password:
          type: string
          example: "ihold#1234"
    StoreProduct:
      type: object
      required:
        - product_status_id
        - merchant_id
        - name
        - price
      properties:
        product_status_id:
          type: int32
          example: 1
        merchant_id:
           type: int32
           example: 1
        name:
          type: string
          example: Caderno Universitario
        price:
          type: number
          format: double
          example: "17.80"
    UpdateProduct:
      type: object
      required:
        - product_status_id
        - merchant_id
        - name
        - price
      properties:
        product_status_id:
          type: int32
          example: 1
        merchant_id:
           type: int32
           example: 1
        name:
          type: string
          example: Caderno Universitario
        price:
          type: number
          format: double
          example: "15.80"
    StoreOrder:
      type: object
      properties:
        order:
          type: object
          properties:
            order_status_id:
              type: int32
              example: 1
            customer_id:
              type: int32
              example: 1
        products:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: int32
                example: 1
              quantity:
                type: int32
                example: 2
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
